create table emp (emp_id integer,emp_name varchar(20),desc_id integer, place_id integer, proj_id integer);

insert into emp values(1,'Vijaykumar',10,1,3);
 insert into emp values(2,'Raja',20,3,4);
 insert into emp values(3,'Abhisheksingh',10,4,5);
 insert into emp values(4,'Santosh',30,2,1);
 insert into emp values(5,'Kribakaran',20,3,2);
 insert into emp values(6,'Divya',40,5,3);
 insert into emp values(7,'Suganya',10,3,4);
 insert into emp values(8,'Shalini',20,2,2);
 insert into emp values(9,'Avantika',30,1,5);
 insert into emp values(10,'Ajay',50,6,8);
 insert into emp values(11,'Tamilselvan',60,7,6);
 insert into emp values(12,'Vinodha',70,6,7);
 insert into emp values(13,'Karthick',60,5,2);
 insert into emp values(14,'Sanjay',70,6,5);
 insert into emp values(15,'Meera',60,8,7);

create table designation(desc_id integer,desc_name varchar(5),role_typ varchar(15));

insert into designation values(10,'ASE','DEVELOPER');
 insert into designation values(20,'SE','DEVELOPER');
 insert into designation values(30,'SSE','DEVELOPER');
 insert into designation values(40,'TL','LEAD');
 insert into designation values(50,'AM','LEAD');
 insert into designation values(100,'SM','MANAGER');

create table place( place_id integer,place_desc varchar(15),place_typ varchar(15));

insert into place values(1,'Chennai','Offshore');
 insert into place values(2,'Bangalore','Offshore');
 insert into place values(3,'Hyderabad','Offshore');
 insert into place values(4,'Mexico','Nearshore');
 insert into place values(5,'Newyork','Onshore');
 insert into place values(10,'Canada','Onshore');

create table project (proj_id integer,proj_name varchar(10));

insert into project values(1,'Cigna');
 insert into project values(2,'ASG');
 insert into project values(3,'Pepsi');
 insert into project values(4,'Microsoft');
 insert into project values(5,'Amazon');
 insert into project values(10,'Flipkart');

1."Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME

List all the employees from the employee table 
EMP_ID
EMP_NAME 
DESC_NAME ---> If Designation Name is not available then show 'Unknown Designation', If Designation Name  is available but if Role Type is Lead then Show 'TEAM_LEAD'  otherwise populate with out any conversion
PLACE_DESC -- >If  Place Description is not avaible then show 'Others' , If  Place Description is available but if Place Type is newyork  then show 'USA'
PROJ_NAME --> Designation is not avaible in Department table then show 'Unknown Project'"								
								
 select e.emp_id,e.emp_name,case when d.desc_name is null then 'Unknown Designation' when d.desc_name='TL' then 'Team_Lead' when d.desc_name='AM' then 'Team_Lead' else d.desc_name end as desc_name,case when p.place_desc is null then 'Others' when p.place_desc='Newyork' then 'USA' else p.place_desc end as place_desc,case when pr.proj_name is null then 'Unknown Project' else pr.proj_name end as proj_name from emp e left join designation d on e.desc_id=d.desc_id left join place p on e.place_id=p.place_id left join project pr on pr.proj_id=e.proj_id order by emp_id;
+--------+---------------+---------------------+------------+-----------------+
| emp_id | emp_name      | desc_name           | place_desc | proj_name       |
+--------+---------------+---------------------+------------+-----------------+
|      1 | Vijaykumar    | ASE                 | Chennai    | Pepsi           |
|      2 | Raja          | SE                  | Hyderabad  | Microsoft       |
|      3 | Abhisheksingh | ASE                 | Mexico     | Amazon          |
|      4 | Santosh       | SSE                 | Bangalore  | Cigna           |
|      5 | Kribakaran    | SE                  | Hyderabad  | ASG             |
|      6 | Divya         | Team_Lead           | USA        | Pepsi           |
|      7 | Suganya       | ASE                 | Hyderabad  | Microsoft       |
|      8 | Shalini       | SE                  | Bangalore  | ASG             |
|      9 | Avantika      | SSE                 | Chennai    | Amazon          |
|     10 | Ajay          | Team_Lead           | Others     | Unknown Project |
|     11 | Tamilselvan   | Unknown Designation | Others     | Unknown Project |
|     12 | Vinodha       | Unknown Designation | Others     | Unknown Project |
|     13 | Karthick      | Unknown Designation | USA        | ASG             |
|     14 | Sanjay        | Unknown Designation | Others     | Amazon          |
|     15 | Meera         | Unknown Designation | Others     | Unknown Project |
+--------+---------------+---------------------+------------+-----------------+

2."Fetch EMP_ID,EMP_NAME,PROJECT_ROLE

List all the employees from the employee table 
EMP_ID
EMP_NAME 
PROJECT_ROLE ---> If he is a 'DEVELOPER' and working in 'OFFSHORE' then show he is a 'TEAMMEMBER' , If he is a 'DEVELOPER' and working in 'NEARSHORE' then show he is a 'TEAMLEAD', If he is a 'DEVELOPER' and working in 'ONSHORE' then show he is a 'BA',If he is a 'LEAD' and working in 'ONSHORE' then show he is a 'SCRUMMASTER', IF he has Some Designation or Working in some place then Show as 'CONTRACTER' Else Show ""SHADOW'"								
								
select e.emp_id,emp_name,case when d.role_typ='Developer' and p.place_typ='Offshore' then 'Teammember' when d.role_typ='Developer' and p.place_typ='Nearshore' then 'Teamlead' when d.role_typ='Developer' and p.place_typ='Onshore' then 'BA'  when d.role_typ='Lead' and p.place_typ='Onshore' then 'Scrummaster' when d.role_typ is not null or p.place_typ is not null then 'Contracter' else 'Shadow' end as Project_Role  from emp e left join designation d on e.desc_id=d.desc_id left join place p on e.place_id=p.place_id left join project pr on pr.proj_id=e.proj_id order by emp_id;
+--------+---------------+--------------+
| emp_id | emp_name      | Project_Role |
+--------+---------------+--------------+
|      1 | Vijaykumar    | Teammember   |
|      2 | Raja          | Teammember   |
|      3 | Abhisheksingh | Teamlead     |
|      4 | Santosh       | Teammember   |
|      5 | Kribakaran    | Teammember   |
|      6 | Divya         | Scrummaster  |
|      7 | Suganya       | Teammember   |
|      8 | Shalini       | Teammember   |
|      9 | Avantika      | Teammember   |
|     10 | Ajay          | Contracter   |
|     11 | Tamilselvan   | Shadow       |
|     12 | Vinodha       | Shadow       |
|     13 | Karthick      | Contracter   |
|     14 | Sanjay        | Shadow       |
|     15 | Meera         | Shadow       |
+--------+---------------+--------------+

3."Fetch DESC_NAME,PLACE_DESC,PROJ_NAME

List how mony employess are working as a DEVELOPER in respective PLACE and PROJECT. Also SHOW rest of count as OTHERS in all the fields and "								
select case when role_typ='Developer' then role_typ else 'Others' end as desc_name1,case when role_typ='Developer' then place_desc else 'Others' end as place_desc1,case when role_typ='Developer' then proj_name else 'Others' end as proj_name1,count(emp_id) from emp e left join designation d on e.desc_id=d.desc_id left join place p on p.place_id =e.place_id left join project pr on pr.proj_id=e.proj_id group by desc_name1,place_desc1,proj_name1;

+------------+-------------+------------+---------------+
| desc_name1 | place_desc1 | proj_name1 | count(emp_id) |
+------------+-------------+------------+---------------+
| DEVELOPER  | Bangalore   | Cigna      |             1 |
| DEVELOPER  | Bangalore   | ASG        |             1 |
| DEVELOPER  | Hyderabad   | ASG        |             1 |
| Others     | Others      | Others     |             7 |
| DEVELOPER  | Chennai     | Pepsi      |             1 |
| DEVELOPER  | Hyderabad   | Microsoft  |             2 |
| DEVELOPER  | Chennai     | Amazon     |             1 |
| DEVELOPER  | Mexico      | Amazon     |             1 |
+------------+-------------+------------+---------------+

4."Fetch EMPLOYEE_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME

Fetch all the Employee name, Designation , Place and project from respective tables if there is any null in respective fields then show it as OTHERS in those null Fields"								
							
select case when emp_name is null then 'Others' else emp_name end as emp_name,case when desc_name is null then 'Others' else desc_name end as desc_name,case when place_desc is null then 'Others' else place_desc end as place_desc,case when proj_name is null then 'Others' else proj_name end as proj_name from emp e full outer join designation d on e.desc_id=d.desc_id full outer join place p on p.place_id=e.place_id full outer join project pr on pr.proj_id=e.proj_id;

 
create table customer(customer_id integer(2),cust_name varchar(20));

insert into customer values(10,"JamesMartin");
insert into customer values(20,"RickyAdams");
insert into customer values(30,"Ramanujam");
insert into customer values(30,"Ramanujam");
insert into customer values(40,"JyothiMahalingam");
insert into customer values(50,"AmaranJothi");
insert into customer values(60,"AkilanBala");
insert into cuatomer values(70,"ArunKumar");
insert into customer values(80,"DineshKumar");


13.Show Customer name from 3rd character to last 3rd character				
				
select substring(cust_name,3,length(cust_name)-4) from customer;
+--------------------------------------------+
| substring(cust_name,3,length(cust_name)-4) |
+--------------------------------------------+
| mesMart                                    |
| ckyAda                                     |
| manuj                                      |
| manuj                                      |
| othiMahaling                               |
| aranJot                                    |
| ilanBa                                     |
| neshKum                                    |
+--------------------------------------------+

14."Show Customer name from 2nd occurance of ""a"" till last 2nd of character

If there is no 2nd occurance populate 'No Second Occurance'"				
								
select substring(cust_name,instr(cust_name,'a',2),length(cust_name)- 3) from customer;								

15.Show Customer name who’s name contain 'A' or 'U' or 'R'	
											
select distinct cust_name from customer where cust_name like '%a%' and cust_name like '%u%' and cust_name like '%r%';
+-------------+
| cust_name   |
+-------------+
| Ramanujam   |
| DineshKumar |
| Arunkumar   |       
+-------------+								
								
create table customer1 (customer_id integer,cust_name varchar(15),city varchar(15),priority_num integer,salesman_id integer,purchased_Amount integer);

insert into customer1 values(10,'James','Chennai',1,1,10000);
 insert into customer1 values(20,'Ricky','Chennai',1,3,8000);
 insert into customer1 values(30,'Ramu','Bangalore',1,2,8000);
 insert into customer1 values(40,'Jyothi','Hyderabad',2,3,9000);
 insert into customer1 values(50,'Amaran','Chennai',1,4,3000);
 insert into customer1 values(60,'Akilan','Hyderabad',2,3,6000);
 insert into customer1 values(70,'Arun','Chennai',2,5,5000);
 insert into customer1 values(80,'Dinesh','Mumbai',2,4,6000);

create table salesman(salesman_id integer,salesman_name varchar(15),city varchar(15),sales_manager_id integer,monthly_target integer);

insert into salesman values(1,'John','Chennai',2,10000);
 insert into salesman values(2,'Abraham','Bangalore',4,21000);
 insert into salesman values(3,'Raju','Hyderabad',4,21000);
 insert into salesman values(4,'Srinath','Mumbai',5,9000);
 insert into salesman values(5,'Vijay','Chennai',6,4000);
 insert into salesman values(6,'Balaji','Hyderabad',6,15000);
								
5."Fetch Salesman_Name, Cust_Name, Customer_city,Salesman_City
Show only the customer and salesman whole belong to the different City "				

select s.salesman_name,c.cust_name,c.city as customer_city,s.city as salesman_city from customer1 c join salesman s on c.salesman_id=s.salesman_id where c.city != S.city;
+---------------+-----------+---------------+---------------+
| salesman_name | cust_name | customer_city | salesman_city |
+---------------+-----------+---------------+---------------+
| Raju          | Ricky     | Chennai       | Hyderabad     |
| Srinath       | Amaran    | Chennai       | Mumbai        |
+---------------+-----------+---------------+---------------+								
								
6."Fetch Salesman_Name, City, Monthly_target, Amount_purchase_by_Customer 

Show only the Sales Man who achieved the monthly Target

 Sum of Amount_purchase_by_Customer -- Amount purchased by corresponding customer
 "				
				
select s.salesman_name,s.city,s.monthly_target,sum(purchased_amount) as amount_purchase_by_customer from customer1 c join salesman s on c.salesman_id=s.salesman_id group by s.salesman_id having amount_purchase_by_customer >= monthly_target;
+---------------+-----------+----------------+-----------------------------+
| salesman_name | city      | monthly_target | amount_purchase_by_customer |
+---------------+-----------+----------------+-----------------------------+
| John          | Chennai   |          10000 |                       10000 |
| Raju          | Hyderabad |          21000 |                       23000 |
| Srinath       | Mumbai    |           9000 |                        9000 |
| Vijay         | Chennai   |           4000 |                        5000 |
+---------------+-----------+----------------+-----------------------------+

7."Fetch Cust_Name, City,Priority_num,Purchased_amount

Show only the customer information who is top two  purchased more in their respective priority

 Sum of Amount_purchase_by_Customer -- Amount purchased by corresponding customer
 "				
				
select * from (select cust_name,city,priority_num,purchased_amount,dense_rank() over(partition by priority_num order by purchased_amount desc) d_rank from customer1) A where d_rank<=2;
+-----------+-----------+--------------+------------------+--------+
| cust_name | city      | priority_num | purchased_amount | d_rank |
+-----------+-----------+--------------+------------------+--------+
| James     | Chennai   |            1 |            10000 |      1 |
| Ricky     | Chennai   |            1 |             8000 |      2 |
| Ramu      | Bangalore |            1 |             8000 |      2 |
| Jyothi    | Hyderabad |            2 |             9000 |      1 |
| Akilan    | Hyderabad |            2 |             6000 |      2 |
| Dinesh    | Mumbai    |            2 |             6000 |      2 |
+-----------+-----------+--------------+------------------+--------+

8."Fetch Salesman_Name, City, Amount_purchase_by_Customer 

Show only the Sales Man who  Amount_purchase_by_Customer is less than the avg monthly target of all sales person
 
 Sum of Amount_purchase_by_Customer -- Amount purchased by corresponding customer
 "			
				
select s.salesman_name,s.city,s.monthly_target,coalesce(sum(purchased_amount),0) as amount_purchase_by_customer from salesman s left join customer1 c on s.salesman_id=c.salesman_id group by s.salesman_name having amount_purchase_by_customer < (select avg(monthly_target) from salesman);
+---------------+-----------+----------------+-----------------------------+
| salesman_name | city      | monthly_target | amount_purchase_by_customer |
+---------------+-----------+----------------+-----------------------------+
| John          | Chennai   |          10000 |                       10000 |
| Abraham       | Bangalore |          21000 |                        8000 |
| Srinath       | Mumbai    |           9000 |                        9000 |
| Vijay         | Chennai   |           4000 |                        5000 |
| Balaji        | Hyderabad |          15000 |                           0 |
+---------------+-----------+----------------+-----------------------------+				

9."Fetch  Sales_Manager_Name, Salesman_Name,Manager Monthly_target,  Amount_purchase_by_Customer 

Show only the Sales Man who's manager is achieved the monthly Target based on his reportees purchase detail

 Sum of Amount_purchase_by_Customer -- Amount purchased by customer which is sold by it reportees
 "				

select distinct * from (select s.salesman_name manager,s1.salesman_name,s.monthly_target monthly,sum(purchased_amount) over (partition by s.salesman_id) amount from salesman s join salesman s1 on s.salesman_id=s1.sales_manager_id join customer1 c on c.salesman_id=s1.salesman_id )A where monthly<=amount;
+---------+---------------+---------+--------+
| manager | salesman_name | monthly | amount |
+---------+---------------+---------+--------+
| Srinath | Raju          |    9000 |  31000 |
| Srinath | Abraham       |    9000 |  31000 |
| Vijay   | Srinath       |    4000 |   9000 |
+---------+---------------+---------+--------+
				
create table class(class_id integer,class varchar(10),classroom_num integer(5),sart_date date,end_date date);
insert into class values(1,"10th",256,"2017-04-01","2018-01-31");
insert into class values(1,"10th",257,"2018-11-01","2019-09-30");
insert into class values(1,"10th",258,"2019-10-01","9999-12-31");
insert into class values(2,"11th",301,"2017-04-01","2018-03-31");
insert into class values(2,"11th",310,"2018-04-01","2019-10-31");
insert into class values(2,"11th",320,"2019-11-01","9999-12-31");
insert into class values(3,"12th",356,"2017-04-01","2018-10-31");
insert into class values(3,"12th",360,"2018-11-01","2019-09-30");
insert into class values(3,"12th",371,"2019-10-01","9999-12-31");

 create table student(student_id integer,student_name varchar(20),student_detail_id integer);
insert into student values(1,"Ajay",1);
insert into student values(2,"Ramesh",2);
insert into student values(3,"Shriram",3);
insert into student values(4,"Gopi",4);
insert into student values(5,"Kalai",5);
insert into student values(6,"Vinoth",6);

create table student_details(student_detail_id integer,city_id integer,class_id integer,start_date date,end_date date);
insert into student_details values(1,1,2,"2018-04-01","2019-03-31");
insert into student_details values(1,1,3,"2019-04-01","9999-12-31");
insert into student_details values(2,2,1,"2018-04-01","2019-03-31");
insert into student_details values(2,3,2,"2019-04-01","9999-12-31");
insert into student_details values(3,2,1,"2017-04-01","2018-03-31");
insert into student_details values(3,3,2,"2018-04-01","2019-03-31");
insert into student_details values(3,1,3,"2019-04-01","9999-12-31");
insert into student_details values(4,2,1,"2018-04-01","2019-03-31");
insert into student_details values(4,3,2,"2019-04-01","9999-12-31");
insert into student_details values(5,1,2,"2019-04-01","9999-12-31");
insert into student_details values(6,2,3,"2019-04-01","9999-12-31");

create table city(city_id integer,city_name varchar(20));
insert into city values(1,"Chennai");
insert into city values(2,"Bangalore");
insert into city values(3,"Mumbai");
				
				
10."Fetch All Student_name,City_name,Class_Name

Show only the initial information of all the student in respective Field"								
select student_name,city_name,class from (select student_name,city_name,class,dense_rank() over (partition by sd.student_detail_id order by start_date) r from student s join student_details sd on s.student_detail_id=sd.student_detail_id join city c on c.city_id=sd.city_id join class cl on cl.class_id=sd.class_id)A where r=1 group by student_name;
+--------------+-----------+-------+
| student_name | city_name | class |
+--------------+-----------+-------+
| Ajay         | Chennai   | 11th  |
| Ramesh       | Bangalore | 10th  |
| Shriram      | Bangalore | 10th  |
| Gopi         | Bangalore | 10th  |
| Kalai        | Chennai   | 11th  |
| Vinoth       | Bangalore | 12th  |
+--------------+-----------+-------+				
				
11."Fetch All Student_name,City_name,Class_Name,Classroom_num

Show only the information of all the student where he stands as of today'S date"				
"Fetch All Student_name,City_name,Class_Name,Classroom_num

Show only the information of all the student where he stands as of today'S date"				
select student_name,city_name,class,classroom_num from student s join student_details sd on s.student_detail_id=sd.student_detail_id join city c on c.city_id=sd.city_id join class cl on cl.class_id=sd.class_id where current_date between sd.start_date and sd.end_date and current_date between cl.sart_date and cl.end_date;
+--------------+-----------+-------+---------------+
| student_name | city_name | class | classroom_num |
+--------------+-----------+-------+---------------+
| Ajay         | Chennai   | 12th  |           360 |
| Ramesh       | Mumbai    | 11th  |           310 |
| Shriram      | Chennai   | 12th  |           360 |
| Gopi         | Mumbai    | 11th  |           310 |
| Kalai        | Chennai   | 11th  |           310 |
| Vinoth       | Bangalore | 12th  |           360 |
+--------------+-----------+-------+---------------+										
12."Fetch All Student_name,City_name

Show only the information of all the student who studied in Chennai or Classroom Number (301,310,320)"				
			
select student_name,city_name from student_details sd join student s on sd.student_detail_id=s.student_detail_id join city c on c.city_id=sd.city_id join class cl on cl.class_id=sd.class_id where city_name='Chennai' or classroom_num in (301,310,320) group by student_name;
+--------------+-----------+
| student_name | city_name |
+--------------+-----------+
| Ajay         | Chennai   |
| Ramesh       | Mumbai    |
| Shriram      | Mumbai    |
| Gopi         | Mumbai    |
| Kalai        | Chennai   |
+--------------+-----------+				
