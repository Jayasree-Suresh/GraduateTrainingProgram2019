1."Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,EMP_DESC_CNT,EMP_PLACE_CNT

EMP_DESC_CNT --- > No Of Employess Each Designation
EMP_PLACE_CNT ---> No Of Employess Each Place

List All the Employees in The employess

If there is null in Place or Designation show as 'OTHERS'" 

select emp_id,emp_name,coalesce(desc_name,'Others'),coalesce(place_desc,'Others'),count(*) over (partition by desc_name) as emp_desc_cnt,count(*) over (partition by place_desc) as emp_place_cnt from emp e left join designation d on e.desc_id=d.desc_id left join place p on p.place_id=e.place_id order by emp_id;
+--------+---------------+------------------------------+-------------------------------+--------------+---------------+
| emp_id | emp_name      | coalesce(desc_name,'Others') | coalesce(place_desc,'Others') | emp_desc_cnt | emp_place_cnt |
+--------+---------------+------------------------------+-------------------------------+--------------+---------------+
|      1 | Vijaykumar    | ASE                          | Chennai                       |            3 |             2 |
|      2 | Raja          | SE                           | Hyderabad                     |            3 |             3 |
|      3 | Abhisheksingh | ASE                          | Mexico                        |            3 |             1 |
|      4 | Santosh       | SSE                          | Bangalore                     |            2 |             2 |
|      5 | Kribakaran    | SE                           | Hyderabad                     |            3 |             3 |
|      6 | Divya         | TL                           | Newyork                       |            1 |             2 |
|      7 | Suganya       | ASE                          | Hyderabad                     |            3 |             3 |
|      8 | Shalini       | SE                           | Bangalore                     |            3 |             2 |
|      9 | Avantika      | SSE                          | Chennai                       |            2 |             2 |
|     10 | Ajay          | AM                           | Others                        |            1 |             5 |
|     11 | Tamilselvan   | Others                       | Others                        |            5 |             5 |
|     12 | Vinodha       | Others                       | Others                        |            5 |             5 |
|     13 | Karthick      | Others                       | Newyork                       |            5 |             2 |
|     14 | Sanjay        | Others                       | Others                        |            5 |             5 |
|     15 | Meera         | Others                       | Others                        |            5 |             5 |
+--------+---------------+------------------------------+-------------------------------+--------------+---------------+

select emp_id,emp_name,A,B,count(emp_id) over (partition by A) as emp_desc_cnt,count(emp_id) over (partition by B) as emp_place_cnt from (select emp_id,emp_name,coalesce(desc_name,'Others') A,coalesce(place_desc,'Others') B from emp e left join designation d on e.desc_id=d.desc_id left join place p on p.place_id=e.place_id order by emp_id) der;
+--------+---------------+--------+-----------+--------------+---------------+
| emp_id | emp_name      | A      | B         | emp_desc_cnt | emp_place_cnt |
+--------+---------------+--------+-----------+--------------+---------------+
|      1 | Vijaykumar    | ASE    | Chennai   |            3 |             2 |
|      2 | Raja          | SE     | Hyderabad |            3 |             3 |
|      3 | Abhisheksingh | ASE    | Mexico    |            3 |             1 |
|      4 | Santosh       | SSE    | Bangalore |            2 |             2 |
|      5 | Kribakaran    | SE     | Hyderabad |            3 |             3 |
|      6 | Divya         | TL     | Newyork   |            1 |             2 |
|      7 | Suganya       | ASE    | Hyderabad |            3 |             3 |
|      8 | Shalini       | SE     | Bangalore |            3 |             2 |
|      9 | Avantika      | SSE    | Chennai   |            2 |             2 |
|     10 | Ajay          | AM     | Others    |            1 |             5 |
|     11 | Tamilselvan   | Others | Others    |            5 |             5 |
|     12 | Vinodha       | Others | Others    |            5 |             5 |
|     13 | Karthick      | Others | Newyork   |            5 |             2 |
|     14 | Sanjay        | Others | Others    |            5 |             5 |
|     15 | Meera         | Others | Others    |            5 |             5 |
+--------+---------------+--------+-----------+--------------+---------------+

2."Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME

List All the Employees who is working in 'Data' or 'Cloud' project. 

Note: Find Respective  keyword in project name"								

select emp_id,emp_name,coalesce(desc_name,'Others'),coalesce(place_desc,'Others'),proj_name from emp e left join designation d on e.desc_id=d.desc_id left join place p on p.place_id=e.place_id join proj pr on pr.proj_id=e.proj_id where pr.proj_name like '%cloud%' or pr.proj_name like '%data%';
+--------+---------------+------------------------------+-------------------------------+------------------------+
| emp_id | emp_name      | coalesce(desc_name,'Others') | coalesce(place_desc,'Others') | proj_name              |
+--------+---------------+------------------------------+-------------------------------+------------------------+
|      1 | Vijaykumar    | ASE                          | Chennai                       | Pepsi Data Mart        |
|      9 | Avantika      | SSE                          | Chennai                       | Amazon Cloud Logistics |
|      8 | Shalini       | SE                           | Bangalore                     | ASG Data Warehousing   |
|      4 | Santosh       | SSE                          | Bangalore                     | Neon Data & Analytics  |
|      5 | Kribakaran    | SE                           | Hyderabad                     | ASG Data Warehousing   |
|      3 | Abhisheksingh | ASE                          | Mexico                        | Amazon Cloud Logistics |
|      6 | Divya         | TL                           | Newyork                       | Pepsi Data Mart        |
|     13 | Karthick      | Others                       | Newyork                       | ASG Data Warehousing   |
|     14 | Sanjay        | Others                       | Others                        | Amazon Cloud Logistics |
+--------+---------------+------------------------------+-------------------------------+------------------------+

3."Fetch EMP_NAME,PLACE_DESC

Show only employees working as higest grade in each place, If two employees in same grade use minimum Place_id to pick one,  If two employees in same project use minimum Project_id to pick one,

Use DESC_ID, PLACE_ID & PROJECT_ID to define Grades "					
										

select emp_id,emp_name,desc_id,place_desc,proj_name from (select emp_id,emp_name,d.desc_id,dense_rank() over (partition by place_desc order by d.desc_id desc,pr.proj_id) d_rank,p.place_desc,proj_name from emp e join designation d on e.desc_id=d.desc_id join place p on p.place_id=e.place_id join proj pr on e.proj_id=pr.proj_id)A where d_rank=1;
+--------+---------------+---------+------------+------------------------+
| emp_id | emp_name      | desc_id | place_desc | proj_name              |
+--------+---------------+---------+------------+------------------------+
|      4 | Santosh       |      30 | Bangalore  | Neon Data & Analytics  |
|      9 | Avantika      |      30 | Chennai    | Amazon Cloud Logistics |
|      5 | Kribakaran    |      20 | Hyderabad  | ASG Data Warehousing   |
|      3 | Abhisheksingh |      10 | Mexico     | Amazon Cloud Logistics |
|      6 | Divya         |      40 | Newyork    | Pepsi Data Mart        |
+--------+---------------+---------+------------+------------------------+
								
4."Fetch Salesman manger Name  & Customer Name 

Show Only the Priority Customer based on the Purchased Amount "				
				
select manager,cust_name from (select s.salesman_name manager,s1.salesman_name,s1.salesman_id,c.cust_name,dense_rank() over (partition by s.salesman_id order by purchased_amount desc) A from salesman s join salesman s1 on s.salesman_id=s1.sales_manager_id join customer1 c on c.salesman_id=s1.salesman_id)der where A=1;
+---------+-----------+
| manager | cust_name |
+---------+-----------+
| Abraham | James     |
| Srinath | Jyothi    |
| Vijay   | Dinesh    |
| Balaji  | Arun      |
+---------+-----------+
				
5.Update the Purchased Monthly target for each sales person based on the Purchase amount 				
				
 select salesman_id,salesman_name,city,sales_manager_id,case when monthly_target > A then monthly_target else A end as updated_target from (select s.salesman_id,s.salesman_name,s.city,s.sales_manager_id,s.monthly_target,sum(purchased_amount) A from customer1 c right join salesman s on c.salesman_id=s.salesman_id group by s.salesman_id) der;
+-------------+---------------+-----------+------------------+----------------+
| salesman_id | salesman_name | city      | sales_manager_id | updated_target |
+-------------+---------------+-----------+------------------+----------------+
|           1 | John          | Chennai   |                2 |          10000 |
|           3 | Raju          | Hyderabad |                4 |          23000 |
|           2 | Abraham       | Bangalore |                4 |          21000 |
|           4 | Srinath       | Mumbai    |                5 |           9000 |
|           5 | Vijay         | Chennai   |                6 |           5000 |
|           6 | Balaji        | Hyderabad |                6 |           NULL |
+-------------+---------------+-----------+------------------+----------------+

 select salesman_id,salesman_name,city,sales_manager_id,A as updated_target from (select s.salesman_id,s.salesman_name,s.city,s.sales_manager_id,s.monthly_target,sum(purchased_amount) A from customer1 c right join salesman s on c.salesman_id=s.salesman_id group by s.salesman_id) der;
+-------------+---------------+-----------+------------------+----------------+
| salesman_id | salesman_name | city      | sales_manager_id | updated_target |
+-------------+---------------+-----------+------------------+----------------+
|           1 | John          | Chennai   |                2 |          10000 |
|           3 | Raju          | Hyderabad |                4 |          23000 |
|           2 | Abraham       | Bangalore |                4 |           8000 |
|           4 | Srinath       | Mumbai    |                5 |           9000 |
|           5 | Vijay         | Chennai   |                6 |           5000 |
|           6 | Balaji        | Hyderabad |                6 |           NULL |
+-------------+---------------+-----------+------------------+----------------+				
				
				
				
				
				
				
				
				
				
		
				
				
				
				
				
				
								
								
								
