1.
class ExtensionException(Exception):
    pass


try:
    mylist = ['jpg', 'png', 'jpeg', 'gif', 'psd']
    inp = input("Please enter the file name: ")
    s=inp.split(".")
    if s[1] in mylist:
        raise ExtensionException
    print("Success")
except ExtensionException as e:
    print("Dont give image format")

4.
import re
with open("ip_address.txt") as f:
    ip=f.readlines()
    for i in ip:
        ip1=re.match("^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$")
	a=ip1.split(".")
	for i in a:
		if i in range(0,256):
			print(ip1)



5.
inp=(input("enter the number in range between 1000 and 9999:"))
mydict={1:'One',2:'Two',3:'Three',4:'Four',5:'Five',6:'Six',7:'Seven',8:'Eight',9:'Nine'}
mydict1={10:'ten',20:'twenty',30:'thirty'...}
s=mydict[int(inp[0])]+" thousand "+mydict[int(inp[1])]+" hundred "
i=inp[-2:]
if i in mydict1:
	s=s+mydict1[int(i)]
	print(s)
else:
	a=inp[2]+"0"
	s=s+mydict1[int(a)]+" "+mydict[input(inp[3])]
	print(s)

3.
import mysql connector
with open("id_num.txt") as f:
	data=f.readlines()
	
mydb=mysql.connector.connect(host="localhost",user="root",passwd="root",database="student")
mycursor=mydb.cursor()
mycursor.execute("select id from students")
id=mycursor.fetchall()
for i in data:
	if i in id:
		quer="select * from students where id=%s"
		var=i
		mycursor.execute(quer,var)
		id1=mycursor.fetchall()
		with open("student_details.csv","a") as f1:
			data=csv.write(f1)
			data.writerow(id1)

6.
a="Hi, this is sample text."
b=int(input("Enter the range:"))
print(a[:b])
c=b+b
print(a[b:c])  
print(a[c:])


2.
class Bank:
	def __init__(self,balance):
		self.balance=0
	def new_user(self):
		self.uname=input("Enter the username:")
		self.psd=input("Enter the password:")
		self.email=input("Enter the email:")
		print("Acc Created!")
	def offer(self):
		self.balance=1000
		print("Offer amount 1000 added in to ur acc!!!")
	def deposit(self): 
        	amount = input("Enter amount to be deposited:")
        	self.balance += amount 
        	print("Amount Deposited:", amount)
	def withdraw(self):
		amount=input("Enter the amount to be withdrawn:")
		if self.balance>=amount:
			self.balance=self.balance-amount
			print("Amount taken:",amount)
		else:
			print("Insufficient balance")


b=Bank()
b.new_user
b.offer
b.deposit
b.withdraw
	
				




	